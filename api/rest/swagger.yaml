basePath: /geoip
definitions:
  Version:
    properties:
      branch:
        type: string
      commit:
        type: string
      version:
        type: string
    type: object
  entity.City:
    properties:
      ISP:
        $ref: '#/definitions/entity.ISP'
      city:
        properties:
          geoNameID:
            type: integer
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      continent:
        properties:
          code:
            type: string
          geoNameID:
            type: integer
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      country:
        properties:
          geoNameID:
            type: integer
          isInEuropeanUnion:
            type: boolean
          isoCode:
            type: string
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      location:
        properties:
          accuracyRadius:
            type: integer
          latitude:
            type: number
          longitude:
            type: number
          metroCode:
            type: integer
          timeZone:
            type: string
        type: object
      postal:
        properties:
          code:
            type: string
        type: object
      registeredCountry:
        properties:
          geoNameID:
            type: integer
          isInEuropeanUnion:
            type: boolean
          isoCode:
            type: string
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      representedCountry:
        properties:
          geoNameID:
            type: integer
          isInEuropeanUnion:
            type: boolean
          isoCode:
            type: string
          names:
            additionalProperties:
              type: string
            type: object
          type:
            type: string
        type: object
      subdivisions:
        items:
          properties:
            geoNameID:
              type: integer
            isoCode:
              type: string
            names:
              additionalProperties:
                type: string
              type: object
          type: object
        type: array
      traits:
        properties:
          isAnonymousProxy:
            type: boolean
          isSatelliteProvider:
            type: boolean
        type: object
    type: object
  entity.CityLite:
    properties:
      city:
        properties:
          name:
            type: string
        type: object
      country:
        properties:
          isoCode:
            type: string
          name:
            type: string
        type: object
      location:
        $ref: '#/definitions/entity.LocationLite'
    type: object
  entity.Country:
    properties:
      continent:
        properties:
          code:
            type: string
          geoNameID:
            type: integer
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      country:
        properties:
          geoNameID:
            type: integer
          isInEuropeanUnion:
            type: boolean
          isoCode:
            type: string
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      registeredCountry:
        properties:
          geoNameID:
            type: integer
          isInEuropeanUnion:
            type: boolean
          isoCode:
            type: string
          names:
            additionalProperties:
              type: string
            type: object
        type: object
      representedCountry:
        properties:
          geoNameID:
            type: integer
          isInEuropeanUnion:
            type: boolean
          isoCode:
            type: string
          names:
            additionalProperties:
              type: string
            type: object
          type:
            type: string
        type: object
      traits:
        properties:
          isAnonymousProxy:
            type: boolean
          isSatelliteProvider:
            type: boolean
        type: object
    type: object
  entity.GeoName:
    properties:
      admin1Code:
        type: string
      admin2Code:
        type: string
      admin3Code:
        type: string
      admin4Code:
        type: string
      alternateCountryCodes:
        type: string
      alternateNames:
        type: string
      asciiName:
        type: string
      class:
        type: string
      code:
        type: string
      countryCode:
        type: string
      digitalElevationModel:
        type: integer
      elevation:
        type: integer
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      modificationDate:
        type: string
      name:
        type: string
      population:
        type: integer
      timezone:
        type: string
    type: object
  entity.GeoNameAdminSubdivision:
    properties:
      asciiName:
        type: string
      code:
        type: string
      geonameId:
        type: integer
      name:
        type: string
    type: object
  entity.GeoNameCountry:
    properties:
      area:
        type: number
      capital:
        type: string
      continent:
        type: string
      currencyCode:
        type: string
      currencyName:
        type: string
      equivalentFipsCode:
        type: string
      fips:
        type: string
      geonameID:
        type: integer
      iso2Code:
        type: string
      iso3Code:
        type: string
      isoNumeric:
        type: string
      languages:
        type: string
      name:
        type: string
      neighbours:
        type: string
      phone:
        type: string
      population:
        type: integer
      postalCodeFormat:
        type: string
      postalCodeRegex:
        type: string
      tld:
        type: string
    type: object
  entity.ISP:
    properties:
      autonomousSystemNumber:
        type: integer
      autonomousSystemOrganization:
        type: string
      isp:
        type: string
      mobileCountryCode:
        type: string
      mobileNetworkCode:
        type: string
      organization:
        type: string
    type: object
  entity.LocationLite:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      timeZone:
        type: string
    type: object
  entity.MetaData:
    properties:
      binaryFormatMajorVersion:
        type: integer
      binaryFormatMinorVersion:
        type: integer
      buildEpoch:
        type: integer
      databaseType:
        type: string
      description:
        additionalProperties:
          type: string
        type: object
      ipversion:
        type: integer
      languages:
        items:
          type: string
        type: array
      nodeCount:
        type: integer
      recordSize:
        type: integer
    type: object
  entity.geoNameContinentJson:
    properties:
      code:
        type: string
      geoNameID:
        type: integer
      name:
        type: string
    type: object
info:
  contact: {}
  description: Service for geo location by IP based on GeoLite2 database
  license:
    name: á… 
  title: Geos API
  version: "1.0"
paths:
  /city-lite/{addr}:
    get:
      parameters:
      - description: ip or hostname
        in: path
        name: addr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.CityLite'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: city lite
      tags:
      - geo IP
  /city/{addr}:
    get:
      parameters:
      - description: ip or hostname
        in: path
        name: addr
        required: true
        type: string
      - description: include ISP info
        in: query
        name: isp
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.City'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: city
      tags:
      - geo IP
  /country/{addr}:
    get:
      parameters:
      - description: ip or hostname
        in: path
        name: addr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Country'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: country
      tags:
      - geo IP
  /dump:
    get:
      deprecated: true
      parameters:
      - description: format
        in: query
        name: format
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: geoip database dump
      tags:
      - geo IP
  /dump/{db}/csv:
    get:
      parameters:
      - description: db type
        enum:
        - city
        - isp
        in: path
        name: db
        required: true
        type: string
      - description: include header
        in: query
        name: header
        type: boolean
      produces:
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: maxmind csv database. It's generated from the mmdb file, so the result
        may differ from those that are officially supplied
      tags:
      - geo IP
  /dump/{db}/metadata:
    get:
      parameters:
      - description: db type
        enum:
        - city
        - isp
        in: path
        name: db
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.MetaData'
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: maxmind database metadata
      tags:
      - geo IP
  /dump/{db}/mmdb:
    get:
      parameters:
      - description: db type
        enum:
        - city
        - isp
        in: path
        name: db
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: maxmind mmdb database
      tags:
      - geo IP
  /env:
    get:
      produces:
      - text/yaml
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: get current environment
      tags:
      - admin
  /geoname/city:
    get:
      parameters:
      - description: comma separated list of country codes
        in: query
        items:
          type: string
        name: country-codes
        type: array
      - description: name prefix
        in: query
        name: name-prefix
        type: string
      - description: comma separated list of GeoNames ids
        in: query
        items:
          type: integer
        name: geoname-ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.GeoName'
            type: array
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      summary: city
      tags:
      - geonames
  /geoname/continent:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.geoNameContinentJson'
            type: array
      summary: continent
      tags:
      - geonames
  /geoname/country:
    get:
      parameters:
      - description: comma separated list of country codes
        in: query
        items:
          type: string
        name: country-codes
        type: array
      - description: name prefix
        in: query
        name: name-prefix
        type: string
      - description: comma separated list of GeoNames ids
        in: query
        items:
          type: integer
        name: geoname-ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.GeoNameCountry'
            type: array
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      summary: country
      tags:
      - geonames
  /geoname/dump:
    get:
      parameters:
      - description: format
        in: query
        name: format
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      summary: geonames csv dump
      tags:
      - geonames
  /geoname/subdivision:
    get:
      parameters:
      - description: comma separated list of country codes
        in: query
        items:
          type: string
        name: country-codes
        type: array
      - description: name prefix
        in: query
        name: name-prefix
        type: string
      - description: comma separated list of GeoNames ids
        in: query
        items:
          type: integer
        name: geoname-ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.GeoNameAdminSubdivision'
            type: array
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
        "503":
          description: error
          schema:
            type: string
      summary: city lite
      tags:
      - geonames
  /ping:
    get:
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping request
      tags:
      - public
  /version:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Version'
      summary: get service version
      tags:
      - public
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: GEOS-API-Key
    type: apiKey
swagger: "2.0"
